$themes: (
  "dark": (
    colorPrimary: #ffffff,
    colorSecondary: rgba(255, 255, 255, 0.7),
    bgMain: #000000,
    bgPrimary: #000000,
    bgSecondary: #13171f,
    borderPrimary: #30363c,
  ),
  "light": (
    colorPrimary: #13171f,
    colorSecondary: #ffffff,
    bgMain: #f7f2f2,
    bgPrimary: #ffffff,
    bgSecondary: #ece9e9,
    borderPrimary: #eff2f7,
  ),
);

$radiusL: 14px;
$buttonBgPrimary: linear-gradient(
  to right,
  #ab57ec 0%,
  #9726ed 50%,
  #2aabe4 100%
);
$buttonColorPrimary: #ffffff;

@mixin themed() {
  @each $theme, $map in $themes {
    :global(.theme--#{$theme}) & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@mixin themed() {
  @each $theme, $map in $themes {
    :global(.theme--#{$theme}) & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function t($key: "colorPrimary") {
  @return map-get($theme-map, $key);
}
